/**
 *@title WinFormGUI / WinFormSample / WinFormSample_analysis.txt
 *@content WinFormSampleフォルダーの考察をまとめるファイル
 */
 /*
NOTE【Exception】
配列を利用した for文において条件式に「=」を入れると
ArrayIndexOutOfBoundsExceptionとなるはずだが、
WindowsFormプロジェクトでは、どこにも例外が表示されない。
ただ、正しくFormは表示されず、プログラムは終了する。
コンパイルエラーにもならない。

for(int i = 0; i <= buttonAry.Length; i++)
*/

 *@NOTE【エラー検出】
 *      下記のように「出力の種類」を[コンソールアプリケーション]に設定すると
 *      例外表示される。
 *
 *      または、try-catch構文で 例外時に MessageBoxなどで出力。

 *@NOTE【実行】このプロジェクトでコンソール出力するには
 *      WinFormGUIプロジェクトは「出力の種類」が[Windows Form]となっている。
 *      
 *      VS[プロジェクト] -> [プロパティ] -> [アプリケーション]タブ
 *      -> [出力の種類] -> [コンソールアプリケーション]に変更
 *      (終了後は元に戻しておく)
 */

 /*
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT12_MenuToolStrip
 *@class MainMenuIconSample.cs
 *@NOTE【Exception】imageList.Images.AddStrip(Image)
 *      System.ArgumentException: 
 *      イメージ ストリップの幅は ImageSize.Width の正の倍数でなければなりません。
 *      パラメーター名:value
 *      場所 System.Windows.Forms.ImageList.ImageCollection.AddStrip(Image value)
 *      
 *      元画像 36×36のとき
 *      => imageList.ImageSize = new Size(36, 36);を追加すると解決
 *      => imageList.ImageSize = new Size(24, 24),だと整数倍ではないので例外のまま。
 *      => AddStrip() -> Add()にすると解決
 *      
 *      AddStrip()は整数倍のサイズに限定されてしまう。
 *      サイズ変更したい場合は imageList.Images.Add(Image)を利用すべき
 *      
 *@NOTE【考察】ImageSize
 *      Size  imageList.ImageSize
 *      Size  toolStrip.ImageScalingSize が競合すると MenuStripの値を優先
 *      
 *      どちらも デフォルト 16×16なので、元画像 36×36を利用するときは
 *      imageList.ImageSize = new Size(36, 36);
 *      toolStrip.ImageScalingSize= new Size(36, 36); 
 *      とするべき。
 *      そうしないと、16×16で登録されたものを表示サイズに拡大するため、
 *      表示を 36×36などにする場合は アイコン画像が劣化する。
 */
 
 /** 
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT12_MenuToolStrip
 *@class MainMenuStripSample.cs
 *@subject Shotcut Key
 *         ・Textに「&A」-> 表示「A」-> Shortcut Keyを登録
 *         ・親ToolStripMenuItemは 「&F」-> 表示「F」 -> [Alt] + [F]で機能する
 *         ・子ToolStripMenuItemは 「&A」-> 表示「A」と
 *           Keys   menuItem.ShortcutKeys  メニュー項目の後ろに表示。Shortcut Keyを登録。
 *           
 *@NOTE 親ToolStripMenuItemに Keysを利用すると例外発生
 *      System.ComponentModel.InvalidEnumArgumentException:
 *      引数値 'value' は列挙型 'Keys' に対して無効です。
 *      パラメーター名: value
 *      場所 System.Windows.Forms.ToolStripMenuItem.set_ShortcutKeys(Keys value)
 *      
 *      => menuFile.ShortcutKeys = Keys.F; を削除すると解決
 */

 *@title WinFormGUI / WinFormSample / ReverseReference / RR07_MultiWindow
 *@class MainMdiSample.cs
 *@NOTE【考察】Form部品はコンストラクタで記述すべき
 *      Form部品を Form_Load(object sender, EventArgs e)に記述すると
 *      new Form1().Show();で空のFormを表示し、Form部品は反映しない。
 */

/* 
 *@title WinFormGUI / WinFormSample / ReverseReference / RR07_MultiWindow
 *@class MainMdiLayoutSample.cs
 *@subject 親メニュー項目オブジェクトの取得
 *         delegate void ToolStripItemClickedEventHandler(
 *             object sender, ToolStripItemClickedEventArgs e)
 *             
 *         ・このイベントは親メニュー項目のイベントなので、senderは親メニュー項目のオブジェクト
 *         ・ToolStripItemClickedEventArgs e
 *           ToolStripItem    e.ChildClicked      クリックされた子メニュー項目オブジェクトはこちらを利用
 *           
 *         ToolStripMenuItem menuLayout = (ToolStripMenuItem) sender;
 *         foreach(ToolStripMenuItem menuChild in menuLayout.DropDownItems)
 *         {
 *              menuChild.Checked = false;
 *         }//foreach
 *         
 *         ToolStripItem selectedItem = e.ClickedItem;
 *
 *@NOTE【考察】新規追加時は MdiLayout.Cascadeで追加
 *      ・新規追加前の Layoutにチェックされている
 *      ・子Formが何もない状態で Layoutメニューを指定すると、
 *        チェック状態にはなるが、新規追加時は MdiLayout.Cascadeで追加
 *      
 *@NOTE【考察】Checkの単一選択
 *      指定したメニュー項目のみチェック状態にしたい場合、
 *      CheckOnClicked = true;のままだと、複数項目にチェックされる。
 *         
 *      => Clickイベント内で、全ての Checked = false;にする。
 *         指定メニュー項目を trueにしておくと、全ての Checkが外れてしまう。
 *         
 *      => 全ての項目を falseにしただけなのに、(どこも trueにしていないのに)
 *         実行動作は意図した動作(=新たにクリックした項目だけチェック)になっている。
 *         おそらく、メニュー項目の処理が完了したときのイベントが暗黙的に設定されている可能性あり。
 *         暗黙的に、クリックした項目を trueにしているコードが存在するのは
 *         望ましいコードではない。
 */
 /*
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT07_Graphics
 *@class MainTimerAnimationSample.cs
 *@NOTE【考察】Formの Size, ClientSize
 *      Formのサイズは、X座標, Y座標に 見えていない余分の幅が存在し、
 *      Size = 見えている幅 + 見えていない余分の幅 
 *      ClientSize = 見えている幅
 *      
 *      おそらくTitleBar, ScrollBar, StatusBarの幅が Formのサイズになっている。
 *      可視範囲の Formの枠で座標処理する場合は ClientSizeで処理すべし
 */
