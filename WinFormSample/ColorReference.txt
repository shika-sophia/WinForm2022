/**
 *@title WinformGUI/WinFormSample/ColorReference.txt
 *@copyFrom FormReference.txt
 *@copyFrom KaiteiNet / KT13_OwnerDraw / MainOwnerDrawSample.cs 
 *@copyFrom KaiteiNet / KT07_Graphics / MainDrawFillSample.cs
 *@copyFrom KaiteiNet / KT07_Graphics / MainHatchBrushViewer.cs
 *@copyFrom KaiteiNet / KT07_Graphics / MainBrushAppendix.cs
 *@copyFrom ReverseReference / RR08_Graphics / MainPathGradientBrush.cs
 *@author shika
 *@date 2022-08-29
 */
/*
 *@subject ＊色指定
 *          Color  control.ForeColor 文字色
 *          Color  control.BackColor 背景色
 *          Color  form.TransparencyKey 透過色 (=透明として扱う色)
 *          Color  Color.Transparent 透過色 (=透明として扱う色)
 *          Color  Color.FormArgb(int red, int green, int blue)
 *            └ struct Color.Xxxx        色指定 
 *            └ class  SystemColors.Xxxx Windows部品で使用するデフォルト色
 *            └ enum   KnownColors.Xxxx  Windowsで定義されている標準色
 *
 *@subject ◆struct System.Drawing.Color
 *         ＊All Properties
 *         Color   Color.Transparent  { get; }
 *         Color   Color.AliceBlue  { get; }
 *         Color   Color.AntiqueWhite  { get; }
 *         Color   Color.Aqua  { get; }
 *         Color   Color.Aquamarine  { get; }
 *         Color   Color.Azure  { get; }
 *         Color   Color.Beige  { get; }
 *         Color   Color.Bisque  { get; }
 *         Color   Color.Black  { get; }
 *         Color   Color.BlanchedAlmond  { get; }
 *         Color   Color.Blue  { get; }
 *         Color   Color.BlueViolet  { get; }
 *         Color   Color.Brown  { get; }
 *         Color   Color.BurlyWood  { get; }
 *         Color   Color.CadetBlue  { get; }
 *         Color   Color.Chartreuse  { get; }
 *         Color   Color.Chocolate  { get; }
 *         Color   Color.Coral  { get; }
 *         Color   Color.CornflowerBlue  { get; }
 *         Color   Color.Cornsilk  { get; }
 *         Color   Color.Crimson  { get; }
 *         Color   Color.Cyan  { get; }
 *         Color   Color.DarkBlue  { get; }
 *         Color   Color.DarkCyan  { get; }
 *         Color   Color.DarkGoldenrod  { get; }
 *         Color   Color.DarkGray  { get; }
 *         Color   Color.DarkGreen  { get; }
 *         Color   Color.DarkKhaki  { get; }
 *         Color   Color.DarkMagenta  { get; }
 *         Color   Color.DarkOliveGreen  { get; }
 *         Color   Color.DarkOrange  { get; }
 *         Color   Color.DarkOrchid  { get; }
 *         Color   Color.DarkRed  { get; }
 *         Color   Color.DarkSalmon  { get; }
 *         Color   Color.DarkSeaGreen  { get; }
 *         Color   Color.DarkSlateBlue  { get; }
 *         Color   Color.DarkSlateGray  { get; }
 *         Color   Color.DarkTurquoise  { get; }
 *         Color   Color.DarkViolet  { get; }
 *         Color   Color.DeepPink  { get; }
 *         Color   Color.DeepSkyBlue  { get; }
 *         Color   Color.DimGray  { get; }
 *         Color   Color.DodgerBlue  { get; }
 *         Color   Color.Firebrick  { get; }
 *         Color   Color.FloralWhite  { get; }
 *         Color   Color.ForestGreen  { get; }
 *         Color   Color.Fuchsia  { get; }
 *         Color   Color.Gainsboro  { get; }
 *         Color   Color.GhostWhite  { get; }
 *         Color   Color.Gold  { get; }
 *         Color   Color.Goldenrod  { get; }
 *         Color   Color.Gray  { get; }
 *         Color   Color.Green  { get; }
 *         Color   Color.GreenYellow  { get; }
 *         Color   Color.Honeydew  { get; }
 *         Color   Color.HotPink  { get; }
 *         Color   Color.IndianRed  { get; }
 *         Color   Color.Indigo  { get; }
 *         Color   Color.Ivory  { get; }
 *         Color   Color.Khaki  { get; }
 *         Color   Color.Lavender  { get; }
 *         Color   Color.LavenderBlush  { get; }
 *         Color   Color.LawnGreen  { get; }
 *         Color   Color.LemonChiffon  { get; }
 *         Color   Color.LightBlue  { get; }
 *         Color   Color.LightCoral  { get; }
 *         Color   Color.LightCyan  { get; }
 *         Color   Color.LightGoldenrodYellow  { get; }
 *         Color   Color.LightGreen  { get; }
 *         Color   Color.LightGray  { get; }
 *         Color   Color.LightPink  { get; }
 *         Color   Color.LightSalmon  { get; }
 *         Color   Color.LightSeaGreen  { get; }
 *         Color   Color.LightSkyBlue  { get; }
 *         Color   Color.LightSlateGray  { get; }
 *         Color   Color.LightSteelBlue  { get; }
 *         Color   Color.LightYellow  { get; }
 *         Color   Color.Lime  { get; }
 *         Color   Color.LimeGreen  { get; }
 *         Color   Color.Linen  { get; }
 *         Color   Color.Magenta  { get; }
 *         Color   Color.Maroon  { get; }
 *         Color   Color.MediumAquamarine  { get; }
 *         Color   Color.MediumBlue  { get; }
 *         Color   Color.MediumOrchid  { get; }
 *         Color   Color.MediumPurple  { get; }
 *         Color   Color.MediumSeaGreen  { get; }
 *         Color   Color.MediumSlateBlue  { get; }
 *         Color   Color.MediumSpringGreen  { get; }
 *         Color   Color.MediumTurquoise  { get; }
 *         Color   Color.MediumVioletRed  { get; }
 *         Color   Color.MidnightBlue  { get; }
 *         Color   Color.MintCream  { get; }
 *         Color   Color.MistyRose  { get; }
 *         Color   Color.Moccasin  { get; }
 *         Color   Color.NavajoWhite  { get; }
 *         Color   Color.Navy  { get; }
 *         Color   Color.OldLace  { get; }
 *         Color   Color.Olive  { get; }
 *         Color   Color.OliveDrab  { get; }
 *         Color   Color.Orange  { get; }
 *         Color   Color.OrangeRed  { get; }
 *         Color   Color.Orchid  { get; }
 *         Color   Color.PaleGoldenrod  { get; }
 *         Color   Color.PaleGreen  { get; }
 *         Color   Color.PaleTurquoise  { get; }
 *         Color   Color.PaleVioletRed  { get; }
 *         Color   Color.PapayaWhip  { get; }
 *         Color   Color.PeachPuff  { get; }
 *         Color   Color.Peru  { get; }
 *         Color   Color.Pink  { get; }
 *         Color   Color.Plum  { get; }
 *         Color   Color.PowderBlue  { get; }
 *         Color   Color.Purple  { get; }
 *         Color   Color.Red  { get; }
 *         Color   Color.RosyBrown  { get; }
 *         Color   Color.RoyalBlue  { get; }
 *         Color   Color.SaddleBrown  { get; }
 *         Color   Color.Salmon  { get; }
 *         Color   Color.SandyBrown  { get; }
 *         Color   Color.SeaGreen  { get; }
 *         Color   Color.SeaShell  { get; }
 *         Color   Color.Sienna  { get; }
 *         Color   Color.Silver  { get; }
 *         Color   Color.SkyBlue  { get; }
 *         Color   Color.SlateBlue  { get; }
 *         Color   Color.SlateGray  { get; }
 *         Color   Color.Snow  { get; }
 *         Color   Color.SpringGreen  { get; }
 *         Color   Color.SteelBlue  { get; }
 *         Color   Color.Tan  { get; }
 *         Color   Color.Teal  { get; }
 *         Color   Color.Thistle  { get; }
 *         Color   Color.Tomato  { get; }
 *         Color   Color.Turquoise  { get; }
 *         Color   Color.Violet  { get; }
 *         Color   Color.Wheat  { get; }
 *         Color   Color.White  { get; }
 *         Color   Color.WhiteSmoke  { get; }
 *         Color   Color.Yellow  { get; }
 *         Color   Color.YellowGreen  { get; }
 *         Byte   Color.R  { get; }
 *         Byte   Color.G  { get; }
 *         Byte   Color.B  { get; }
 *         Byte   Color.A  { get; }
 *         Boolean   Color.IsKnownColor  { get; }
 *         Boolean   Color.IsEmpty  { get; }
 *         Boolean   Color.IsNamedColor  { get; }
 *         Boolean   Color.IsSystemColor  { get; }
 *         String   Color.Name  { get; }
 *         
 *@subject ◆class System.Drawing.SystemColors
 *         ＊All Properties
 *         Color   SystemColors.ActiveBorder  { get; }
 *         Color   SystemColors.ActiveCaption  { get; }
 *         Color   SystemColors.ActiveCaptionText  { get; }
 *         Color   SystemColors.AppWorkspace  { get; }
 *         Color   SystemColors.ButtonFace  { get; }
 *         Color   SystemColors.ButtonHighlight  { get; }
 *         Color   SystemColors.ButtonShadow  { get; }
 *         Color   SystemColors.Control  { get; }
 *         Color   SystemColors.ControlDark  { get; }
 *         Color   SystemColors.ControlDarkDark  { get; }
 *         Color   SystemColors.ControlLight  { get; }
 *         Color   SystemColors.ControlLightLight  { get; }
 *         Color   SystemColors.ControlText  { get; }
 *         Color   SystemColors.Desktop  { get; }
 *         Color   SystemColors.GradientActiveCaption  { get; }
 *         Color   SystemColors.GradientInactiveCaption  { get; }
 *         Color   SystemColors.GrayText  { get; }
 *         Color   SystemColors.Highlight  { get; }
 *         Color   SystemColors.HighlightText  { get; }
 *         Color   SystemColors.HotTrack  { get; }
 *         Color   SystemColors.InactiveBorder  { get; }
 *         Color   SystemColors.InactiveCaption  { get; }
 *         Color   SystemColors.InactiveCaptionText  { get; }
 *         Color   SystemColors.Info  { get; }
 *         Color   SystemColors.InfoText  { get; }
 *         Color   SystemColors.Menu  { get; }
 *         Color   SystemColors.MenuBar  { get; }
 *         Color   SystemColors.MenuHighlight  { get; }
 *         Color   SystemColors.MenuText  { get; }
 *         Color   SystemColors.ScrollBar  { get; }
 *         Color   SystemColors.Window  { get; }
 *         Color   SystemColors.WindowFrame  { get; }
 *         Color   SystemColors.WindowText  { get; }
 *
 *@subject  enum KnownColor (= struct Color.Xxxx と class SystemColors を融合したような enum)
 *             {
 *                     ActiveBorder = 1,
 *                     ActiveCaption = 2,
 *                     ActiveCaptionText = 3,
 *                     AppWorkspace = 4,
 *                     Control = 5,
 *                     ControlDark = 6,
 *                     ControlDarkDark = 7,
 *                     ControlLight = 8,
 *                     ControlLightLight = 9,
 *                     ControlText = 10,
 *                     Desktop = 11,
 *                     GrayText = 12,
 *                     Highlight = 13,
 *                     HighlightText = 14,
 *                     HotTrack = 15,
 *                     InactiveBorder = 16,
 *                     InactiveCaption = 17,
 *                     InactiveCaptionText = 18,
 *                     Info = 19,
 *                     InfoText = 20,
 *                     Menu = 21,
 *                     MenuText = 22,
 *                     ScrollBar = 23,
 *                     Window = 24,
 *                     WindowFrame = 25,
 *                     WindowText = 26,
 *                     Transparent = 27,
 *                     AliceBlue = 28,
 *                     AntiqueWhite = 29,
 *                     Aqua = 30,
 *                     Aquamarine = 31,
 *                     Azure = 32,
 *                     Beige = 33,
 *                     Bisque = 34,
 *                     Black = 35,
 *                     BlanchedAlmond = 36,
 *                     Blue = 37,
 *                     BlueViolet = 38,
 *                     Brown = 39,
 *                     BurlyWood = 40,
 *                     CadetBlue = 41,
 *                     Chartreuse = 42,
 *                     Chocolate = 43,
 *                     Coral = 44,
 *                     CornflowerBlue = 45,
 *                     Cornsilk = 46,
 *                     Crimson = 47,
 *                     Cyan = 48,
 *                     DarkBlue = 49,
 *                     DarkCyan = 50,
 *                     DarkGoldenrod = 51,
 *                     DarkGray = 52,
 *                     DarkGreen = 53,
 *                     DarkKhaki = 54,
 *                     DarkMagenta = 55,
 *                     DarkOliveGreen = 56,
 *                     DarkOrange = 57,
 *                     DarkOrchid = 58,
 *                     DarkRed = 59,
 *                     DarkSalmon = 60,
 *                     DarkSeaGreen = 61,
 *                     DarkSlateBlue = 62,
 *                     DarkSlateGray = 63,
 *                     DarkTurquoise = 64,
 *                     DarkViolet = 65,
 *                     DeepPink = 66,
 *                     DeepSkyBlue = 67,
 *                     DimGray = 68,
 *                     DodgerBlue = 69,
 *                     Firebrick = 70,
 *                     FloralWhite = 71,
 *                     ForestGreen = 72,
 *                     Fuchsia = 73,
 *                     Gainsboro = 74,
 *                     GhostWhite = 75,
 *                     Gold = 76,
 *                     Goldenrod = 77,
 *                     Gray = 78,
 *                     Green = 79,
 *                     GreenYellow = 80,
 *                     Honeydew = 81,
 *                     HotPink = 82,
 *                     IndianRed = 83,
 *                     Indigo = 84,
 *                     Ivory = 85,
 *                     Khaki = 86,
 *                     Lavender = 87,
 *                     LavenderBlush = 88,
 *                     LawnGreen = 89,
 *                     LemonChiffon = 90,
 *                     LightBlue = 91,
 *                     LightCoral = 92,
 *                     LightCyan = 93,
 *                     LightGoldenrodYellow = 94,
 *                     LightGray = 95,
 *                     LightGreen = 96,
 *                     LightPink = 97,
 *                     LightSalmon = 98,
 *                     LightSeaGreen = 99,
 *                     LightSkyBlue = 100,
 *                     LightSlateGray = 101,
 *                     LightSteelBlue = 102,
 *                     LightYellow = 103,
 *                     Lime = 104,
 *                     LimeGreen = 105,
 *                     Linen = 106,
 *                     Magenta = 107,
 *                     Maroon = 108,
 *                     MediumAquamarine = 109,
 *                     MediumBlue = 110,
 *                     MediumOrchid = 111,
 *                     MediumPurple = 112,
 *                     MediumSeaGreen = 113,
 *                     MediumSlateBlue = 114,
 *                     MediumSpringGreen = 115,
 *                     MediumTurquoise = 116,
 *                     MediumVioletRed = 117,
 *                     MidnightBlue = 118,
 *                     MintCream = 119,
 *                     MistyRose = 120,
 *                     Moccasin = 121,
 *                     NavajoWhite = 122,
 *                     Navy = 123,
 *                     OldLace = 124,
 *                     Olive = 125,
 *                     OliveDrab = 126,
 *                     Orange = 127,
 *                     OrangeRed = 128,
 *                     Orchid = 129,
 *                     PaleGoldenrod = 130,
 *                     PaleGreen = 131,
 *                     PaleTurquoise = 132,
 *                     PaleVioletRed = 133,
 *                     PapayaWhip = 134,
 *                     PeachPuff = 135,
 *                     Peru = 136,
 *                     Pink = 137,
 *                     Plum = 138,
 *                     PowderBlue = 139,
 *                     Purple = 140,
 *                     Red = 141,
 *                     RosyBrown = 142,
 *                     RoyalBlue = 143,
 *                     SaddleBrown = 144,
 *                     Salmon = 145,
 *                     SandyBrown = 146,
 *                     SeaGreen = 147,
 *                     SeaShell = 148,
 *                     Sienna = 149,
 *                     Silver = 150,
 *                     SkyBlue = 151,
 *                     SlateBlue = 152,
 *                     SlateGray = 153,
 *                     Snow = 154,
 *                     SpringGreen = 155,
 *                     SteelBlue = 156,
 *                     Tan = 157,
 *                     Teal = 158,
 *                     Thistle = 159,
 *                     Tomato = 160,
 *                     Turquoise = 161,
 *                     Violet = 162,
 *                     Wheat = 163,
 *                     White = 164,
 *                     WhiteSmoke = 165,
 *                     Yellow = 166,
 *                     YellowGreen = 167,
 *                     ButtonFace = 168,
 *                     ButtonHighlight = 169,
 *                     ButtonShadow = 170,
 *                     GradientActiveCaption = 171,
 *                     GradientInactiveCaption = 172,
 *                     MenuBar = 173,
 *                     MenuHighlight = 174,
 *             }
/*
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT13_OwnerDraw
 *@class MainOwnerDrawSample.cs
 *@subject abstract Brush ブラシ -- Syatem.Drawing
 *         Brush    new SolidBrush(Color)    単色ブラシ
 *         Brush    Brushes.Xxxx             システム定義の標準色の SolidBrush
 *         Brush    Brush.SystemBrushes      システムで利用されている色の SolidBrush
 *           └ class SystemBrushes / staticメンバー  { get; }
 *             Brush  SystemBrushes.GradientActiveCaption    アクティブなタイトルバーのグラデーションで最も明るい色
 *             Brush  SystemBrushes.GradientInactiveCaption  非アクティブなタイトルバーのグラデーションで最も明るい色
 *             Brush  SystemBrushes.Window      クライアント領域の背景色
 *             Brush  SystemBrushes.ScrollBar   スクロール バーの背景の色
 *             Brush  SystemBrushes.MenuText    メニューのテキストの色
 *             Brush  SystemBrushes.MenuHighlight フラットメニュー項目の強調表示色
 *             Brush  SystemBrushes.MenuBar     メニューバーの背景色
 *             Brush  SystemBrushes.Menu        メニュー背景色
 *             Brush  SystemBrushes.InfoText    ツールヒントのテキスト色
 *             Brush  SystemBrushes.Info        ツールヒントの背景色
 *             Brush  SystemBrushes.InactiveCaptionText 非アクティブのタイトルバーのテキスト色
 *             Brush  SystemBrushes.InactiveBorder      非アクティブなウィンドウの境界線の色
 *             Brush  SystemBrushes.InactiveCaption     非アクティブのタイトルバーの背景色
 *             Brush  SystemBrushes.HotTrack    フォーカス項目の色
 *             Brush  SystemBrushes.HighlightText 選択項目のテキスト色
 *             Brush  SystemBrushes.Highlight   選択項目の背景色
 *             Brush  SystemBrushes.GrayText    淡色表示のテキスト色
 *             Brush  SystemBrushes.WindowText  クライアント領域のテキスト色
 *             Brush  SystemBrushes.ActiveBorder  アクティブなウィンドウの境界線の色
 *             Brush  SystemBrushes.ActiveCaption アクティブなウィンドウのタイトルバーの背景色
 *             Brush  SystemBrushes.ActiveCaptionText  アクティブなウィンドウのタイトルバーのテキスト色
 *             Brush  SystemBrushes.AppWorkspace       アプリケーション作業領域の色
 *             Brush  SystemBrushes.ButtonFace         3D要素の表面の色
 *             Brush  SystemBrushes.ButtonHighlight    3D要素の強調表示色
 *             Brush  SystemBrushes.WindowFrame        ウィンドウ フレームの色
 *             Brush  SystemBrushes.ButtonShadow       3D要素の影色
 *             Brush  SystemBrushes.ControlLightLight  3D要素の強調表示色
 *             Brush  SystemBrushes.ControlLight       3D要素の明るい色
 *             Brush  SystemBrushes.ControlDark        3D要素の影色
 *             Brush  SystemBrushes.ControlDarkDark    3D要素の暗い影色
 *             Brush  SystemBrushes.ControlText        3D要素のテキストの色
 *             Brush  SystemBrushes.Desktop            デスクトップの色
 *             Brush  SystemBrushes.Control            3D要素の表面の色
 */
 /* 
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT07_Graphics
 *@class MainDrawFillSample.cs
 *@subject abstract Brush =>〔~/WinFormSample/ColorRefernce.txt〕
 *         ＊GDI+(= System.Drawing.Graphics)以外のライブラリ(=System.Drawing.Drawing2D)を利用する Unmangedリソース
 *         SolidBrushクラス : Brush           単色ブラシ
 *         HatchBrushクラス : Brush           enum HatchStyleで規定の柄で塗りつぶし
 *         TextureBrushクラス : Brush         イメージを指定して塗りつぶし
 *         LinierGradientBrushクラス : Brush  グラデーション
 *           これらのBrushオブジェクトは自動破棄が行われず、アプリケーション実行の間、メモリを占有し続ける。
 *           Brushオブジェクトを大量に利用する場合は、メモリ領域を圧迫する可能性があるので、
 *           利用が終了するたびに Dispose()しておく
 */
/*
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT07_Graphics
 *@class MainHatchBrushViewer.cs
 *@subject ◆HatchBrush : Brush -- System.Drawing.Drawing2D.
 *         new HatchBrush(HatchStyle, Color foreColor)
 *         new HatchBrush(HatchStyle, Color foreColor, Color backColor)
 *         
 *         HatchStyle   hatchBrush.HatchStyle { get; }
 *           └ enum HatchStyle { ... }  〔下記〕
 *         Color ForegroundColor { get; }
 *         Color BackgroundColor { get; }
 *
enum HatchStyle
{
    Horizontal = 0,
    Horizontal = 0,
    Vertical = 1,
    ForwardDiagonal = 2,
    BackwardDiagonal = 3,
    LargeGrid = 4,
    LargeGrid = 4,   //Cross = 4,
    LargeGrid = 4,
    DiagonalCross = 5,
    Percent05 = 6,
    Percent10 = 7,
    Percent20 = 8,
    Percent25 = 9,
    Percent30 = 10,
    Percent40 = 11,
    Percent50 = 12,
    Percent60 = 13,
    Percent70 = 14,
    Percent75 = 15,
    Percent80 = 16,
    Percent90 = 17,
    LightDownwardDiagonal = 18,
    LightUpwardDiagonal = 19,
    DarkDownwardDiagonal = 20,
    DarkUpwardDiagonal = 21,
    WideDownwardDiagonal = 22,
    WideUpwardDiagonal = 23,
    LightVertical = 24,
    LightHorizontal = 25,
    NarrowVertical = 26,
    NarrowHorizontal = 27,
    DarkVertical = 28,
    DarkHorizontal = 29,
    DashedDownwardDiagonal = 30,
    DashedUpwardDiagonal = 31,
    DashedHorizontal = 32,
    DashedVertical = 33,
    SmallConfetti = 34,
    LargeConfetti = 35,
    ZigZag = 36,
    Wave = 37,
    DiagonalBrick = 38,
    HorizontalBrick = 39,
    Weave = 40,
    Plaid = 41,
    Divot = 42,
    DottedGrid = 43,
    DottedDiamond = 44,
    Shingle = 45,
    Trellis = 46,
    Sphere = 47,
    SmallGrid = 48,
    SmallCheckerBoard = 49,
    LargeCheckerBoard = 50,
    OutlinedDiamond = 51,
    SolidDiamond = 52,
}
 *@title WinFormGUI / WinFormSample / KaiteiNet / KT07_Graphics
 *@class MainBrushAppendix.cs
 *@subject ◆LinearGradientBrush : Brush  -- System.Drawing.Drawing2D.
 *         ・線形グラデーション: 一定割合で、一方向へ色の濃淡を変化
 *         ・コンストラクタで、四角形, 開始色, 終了色, Mode, 
 *           [角度][角度の影響を受けるか]を設定
 *         LinearGradientBrush    new LinearGradientBrush(
 *             PointF, PointF, Color, Color, LinearGradientMode
 *             [, float angle, [bool isAngleScaleable]])
 *         LinearGradientBrush    new LinearGradientBrush(
 *             RectangleF, Color, Color, LinearGradientMode
 *             [, float angle, [bool isAngleScaleable]])
 *         ※ Point, Rectangleも可
 *         
 *         RectangleF  linearGradientBrush.Rectangle { get; }
 *         Color[]     linearGradientBrush.LinearColors
 *         LinearGradientMode   (None Property)
 *           └ enum LinearGradientMode -- System.Drawing.Drawing2D.
 *             {
 *                 Horizontal = 0,      //左から右へのグラデーション
 *                 Vertical = 1,        //上から下へのグラデーション
 *                 ForwardDiagonal = 2, //左上から右下へのグラデーション
 *                 BackwardDiagonal = 3 //右上から左下へのグラデーション
 *             }
/* 
 *@title WinFormGUI / WinFormSample / ReverseReference / RR08_Graphics
 *@class MainPathGradientBrushSample.cs
 *@subject ◆PathGradientBrush : Brush -- System.Drawing.Drawing2D
 *         ・コンストラクタで 塗りつぶし範囲を指定
 *         ・色情報は コンストラクタに入っていないので、
 *           CenterColor, SurroundColorsを追加で指定する必要がある
 *           (コンストラクタで生成したオブジェクトのままだと何も描画されない)
 *           
 *         PathGradientBrush     new PathGradientBrush(GraphicsPath, [WrapMode])
 *         PathGradientBrush     new PathGradientBrush(Point[], [WrapMode])  ※Point[]も可
 *           └ enum WrapMode  -- System.Drawing.Drawing2D.  塗りつぶし範囲より Brush範囲が小さい場合の並べ方
 *             {
 *                 Tile = 0,        //グラデーションまたはテクスチャを並べて表示
 *                 TileFlipX = 1,   //水平方向に反転し、並べて表示
 *                 TileFlipY = 2,   //垂直方向に反転し、並べて表示
 *                 TileFlipXY = 3,  //水平および垂直方向に反転し、並べて表示
 *                 Clamp = 4        //並べて表示されません
 *             }
 *             
 *         Color       pathGradientBrush.CenterColor { get; set; }    塗りつぶし範囲の中央の色  
 *         Color[]     pathGradientBrush.SurroundColors { get; set; } 塗りつぶし範囲の path周辺の色
 *         RectangleF  pathGradientBrush.Rectangle { get; }           塗りつぶしpathに外接する四角形
 *         PointF      pathGradientBrush.CenterPoint { get; set; }    グラデーションの中央点
 *         WrapMode    pathGradientBrush.WrapMode { get; set; }       塗りつぶし範囲より Brush範囲が小さい場合の並べ方